@charset "UTF-8";

/*!
 * Reference Bootstrap Grid v5.2.0 (https://getbootstrap.com/)
 * bootstrap-5.2.0/scss/mixins/_grid.scss
 * bootstrap-5.2.0/scss/_grid.scss
 * bootstrap-5.2.0/scss/_variables.scss
 * bootstrap-5.2.0/dist/css/bootstrap-grid.css
 */

$columns: 12 !default;
$grid-columns: 12 !default;

$grid-gutter-width: 0px !default;

$grid-breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
) !default;

.row {
  display: flex;
  flex-wrap: wrap;
  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed
  margin-top: 0; // stylelint-disable-line function-disallowed-list
  margin-right: 0; // stylelint-disable-line function-disallowed-list
  margin-left: 0; // stylelint-disable-line function-disallowed-list
}
.row > * {
  box-sizing: border-box;
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: 0;
  padding-left: 0;
  margin-top: 0;
}

@media (max-width: 575px) {
  .col-xs-12 {
    flex: 0 0 auto;
    width: 100%;
  }
}
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {

  @each $breakpoint in map-keys($breakpoints) {
    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @media (min-width: #{inspect(map-get($breakpoints, $breakpoint))}) {
        @for $i from 1 through $columns {
          .col-#{$breakpoint}-#{$i} {
            flex: 0 0 auto;
            // width: ($i / $columns) * 100%;
            // same as
            width: percentage($i / $columns);
          }
        }
      }
    }
  }
}


/*
-------------------------------------------------------------------------------------
*/

@mixin make-col($size, $columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

// @mixin make-grid-columns($columns:$columns) {

//   @for $i from 1 through $columns {
//     .col-#{$i} {
//       @include make-col($i, $columns)
//     }
//   }
// }

@if true {
  // @include make-grid-columns()
  @include make-grid-columns()
}
