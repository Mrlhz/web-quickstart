@charset "UTF-8";

$columns: 24 !default;
$grid-columns: 24 !default;

$grid-gutter-width: 0px !default;


$sm: 768px !default;
$md: 992px !default;
$lg: 1200px !default;
$xl: 1920px !default;

$grid-breakpoints: (
  'xs' : (max-width: $sm - 1),
  'sm' : (min-width: $sm),
  'md' : (min-width: $md),
  'lg' : (min-width: $lg),
  'xl' : (min-width: $xl)
) !default;

.row {
  display: flex;
  flex-wrap: wrap;
}

.row:after,.row:before {
  display: table;
  content: ""
}

.row:after {
  clear: both
}

[class*="col-"] {
  float: left;
  box-sizing: border-box;
}


@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter * .5;
    padding-left: $gutter * .5;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: unquote($breakpoint);
    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @media only screen and #{inspect(map-get($breakpoints, $breakpoint))} {
        @for $i from 1 through $columns {
          .col-#{$infix}-#{$i} {
            // width: ($i / $columns) * 100%;
            // same as
            width: percentage($i / $columns);
          }
        }
      }
    }
  }
}


/*
-------------------------------------------------------------------------------------
*/

@mixin make-col($size, $columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

// @mixin make-grid-columns($columns:$columns) {

//   @for $i from 1 through $columns {
//     .col-#{$i} {
//       @include make-col($i, $columns)
//     }
//   }
// }

@if true {
  // @include make-grid-columns()
  @include make-grid-columns()
}